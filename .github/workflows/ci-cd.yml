name: CI/CD Pipeline

on:
  push:
    branches: [ Wail ]
  pull_request:
    branches: [ Wail ]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
        
    - name: Install Composer
      run: |
        composer install --no-interaction --prefer-dist --no-progress
        
    - name: Run PHPStan
      run: vendor/bin/phpstan analyse || true
        
    - name: Run PHP CS Fixer
      run: vendor/bin/php-cs-fixer fix --dry-run --diff
        
    - name: Run PHP Security Checker
      run: |
        composer require sensiolabs/security-checker --dev --no-interaction
        vendor/bin/security-checker security:check composer.lock
        
    - name: Run PHP Mess Detector
      run: vendor/bin/phpmd . text cleancode,codesize,controversial,design,naming,unusedcode

  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: notes_esigelec
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
        
    - name: Install Composer
      run: composer install --no-interaction --prefer-dist --no-progress
      
    - name: Wait for MySQL
      run: |
        sudo apt-get install -y mysql-client
        timeout 30s bash -c 'until mysql -h127.0.0.1 -uroot  -e "SELECT 1"; do sleep 1; done'
        
    - name: Initialize Database
      run: |
        mysql -h127.0.0.1 -uroot notes_esigelec < notes_esigelec.sql
        
    - name: Run PHPUnit
      run: vendor/bin/phpunit
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: notes_esigelec
        DB_USER: root
        DB_PASS: ''

  codacy-analysis:
    name: Codacy Analysis
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        continue-on-error: true
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@main
        continue-on-error: true
        with:
          sarif_file: results.sarif

  deploy:
    needs: [security, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Wail'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to Production
      run: |
        echo "Deploying to production..."
       